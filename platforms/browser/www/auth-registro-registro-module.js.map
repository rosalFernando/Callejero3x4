{"version":3,"sources":["webpack:///./src/app/auth/registro/registro.module.ts","webpack:///./src/app/auth/registro/registro.page.html","webpack:///./src/app/auth/registro/registro.page.scss","webpack:///./src/app/auth/registro/registro.page.ts"],"names":[],"mappings":"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","file":"auth-registro-registro-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegistroPage } from './registro.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegistroPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RegistroPage]\r\n})\r\nexport class RegistroPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"success\\\">\\r\\n    <ion-title color=\\\"light\\\" style=\\\"text-align: center\\\">Registro</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n \\r\\n<ion-content padding>\\r\\n  <form class=\\\"form\\\" [formGroup]=\\\"validationForm\\\"  (ngSubmit)=\\\"registro(validationForm.value)\\\">\\r\\n \\r\\n    <ion-item>\\r\\n      <ion-label  position=\\\"floating\\\" color=\\\"primary\\\">Email</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validationMsg.email\\\">\\r\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationForm.get('email').hasError(validation.type) && (validationForm.get('email').dirty || validationForm.get('email').touched)\\\">\\r\\n          {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n \\r\\n    <ion-item>\\r\\n      <ion-label  position=\\\"floating\\\" color=\\\"primary\\\">contraseña</ion-label>\\r\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-controll\\\" required></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validationMsg.password\\\">\\r\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationForm.get('password').hasError(validation.type) && (validationForm.get('password').dirty || validationForm.get('password').touched)\\\">\\r\\n          {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n\\r\\n   \\r\\n \\r\\n    \\r\\n    <ion-button  class=\\\"submit-btn\\\" type=\\\"submit\\\"  [disabled]=\\\"!validationForm.valid\\\">Registrarse</ion-button>\\r\\n    <label class=\\\"error-message\\\">{{errMsg}}</label>\\r\\n    <label class=\\\"success-message\\\">{{successMsg}}</label>\\r\\n  </form>\\r\\n  <p class=\\\"go-to-login\\\">¿Ya tienes una cuenta? <a (click)=\\\"irLogin()\\\">Inicia Sesion.</a></p>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer >\\r\\n    <ion-toolbar color=\\\"success\\\">\\r\\n      <ion-title color=\\\"light\\\" style=\\\"font-size: 15px; text-align: center\\\">COAC Córdoba.</ion-title>\\r\\n    </ion-toolbar>\\r\\n  </ion-footer>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVnaXN0cm8vcmVnaXN0cm8ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { NavController, ToastController } from '@ionic/angular';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-registro',\r\n  templateUrl: './registro.page.html',\r\n  styleUrls: ['./registro.page.scss'],\r\n})\r\nexport class RegistroPage implements OnInit {\r\n\r\n  validationForm: FormGroup;\r\n\r\n  errMsg: string='';\r\n  successMsg:string='';\r\n\r\n  validationMsg = {\r\n    'email':[\r\n      { type: 'required', message: 'Email obligatorio' },\r\n      { type: 'pattern', message: 'Introduce un Email correcto' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Contraseña obligatoria.' },\r\n      { type: 'minlength', message: 'La contraseña debe tener al menos 7 carateres.' }\r\n    ]\r\n  };\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    private authService: AuthService,\r\n    private formBuilder: FormBuilder,\r\n    public toastController: ToastController,\r\n    public route: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.validationForm=this.formBuilder.group({\r\n      email: new FormControl('',Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      password: new FormControl('', Validators.compose([\r\n        Validators.minLength(7),\r\n        Validators.required\r\n      ]))\r\n    });\r\n\r\n  }\r\n\r\n  registro(value){\r\n    \r\n      this.authService.registerUser(value)\r\n    .then(res =>{\r\n\r\n      this.successMsg=\"Cuenta creada\";\r\n      this.route.navigate(['mapa-principal'])\r\n\r\n    })\r\n    .catch(res=>{\r\n      this.errMsg=\"imposible crear cuenta\"\r\n    })\r\n    \r\n    \r\n\r\n  }\r\n  irLogin(){\r\n    this.route.navigate(['autenticacion']);\r\n  }\r\n\r\n\r\n  \r\n\r\n}\r\n"],"sourceRoot":""}